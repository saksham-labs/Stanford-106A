# -*- coding: utf-8 -*-
"""contract_tracing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r42j1mbml9YxyQ93HBY4xgXV7eLA9fmq
"""

from google.colab import files
file = files.upload()

"""
File: contract_tracing.py
-------------------------

Uses the information in locations.txt to get a list of everyone that came in
contact with the target throughout the day.
"""

TARGET = 'Lean'
LOCATION_FILE = 'locations.txt'

def met_target(user, target, name_time_location):
    """
    Checks and compares the route of each user with target's day activties. 
    
    Arguments 
    ---------
    user (str) -- The user in the for-each loop of all users 
    target (str) -- The target user 
    name_time_location -- dictionary that store the route of all users. 
    The dictionary is extracted by reading the data of location file in main function 

    Returns
        True if there is match at any time during the day. Else retruns False  
    """
    target_route = name_time_location[target]
    user_route = name_time_location[user]    

    for time in user_route:
      if user_route[time] == target_route[time]:
        return True  

    return False

def find_contacts(target, location_file):
    """
    Computes and returns a list of people that the target came in contact with
    by processing the location file.

    Arguments
    ---------
    target (str) -- The name of the person to compare everyone against.
    location_file (str) -- The name of the file that contains the location
        information for people throughout the day.

    Returns
    -------
    list [str] -- A list of people who came in contact with the target during
        the day.
    """
    name_time_location = {} # nested dictionary that will store the name, time, and location of each user

    with open(location_file) as l_file:
      for row in l_file:
        row = row.strip().split(',')
        name, time, location = row[0], row[1], row[2]
        name_time_location.setdefault(name, {})
        name_time_location[name][time] = location

    at_risk_list = [] # stores all the users that came in contact with traget during the day
    for user in name_time_location:
      if user == target: # skipping the case where user comes in the loop
        continue
      if met_target(user, target, name_time_location): 
        at_risk_list.append(user)
    print(f'Following people have met the target user during the day \n {at_risk_list}')



def main():
    find_contacts(TARGET, LOCATION_FILE)


if __name__ == '__main__':
    main()